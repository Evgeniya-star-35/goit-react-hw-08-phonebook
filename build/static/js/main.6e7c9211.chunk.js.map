{"version":3,"sources":["redux/Phonebook/phonebook-reduser.js","redux/auth/auth-slice.js","redux/store.js","components/PrivatRoute/PrivatRoute.js","components/PublicRoute/PublicRoute.js","components/Container/Container.js","components/App/App.js","index.js","redux/Phonebook/phonebook-operations.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.js","images/default.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","redux/Phonebook/phonebook-actions.js","components/Container/Container.module.css"],"names":["initialState","contactItems","createReducer","fetchContacts","fulfilled","_","payload","addContact","state","deleteContact","filter","id","loading","pending","rejected","filterReducer","changeFilter","contactsReducer","combineReducers","authSlice","createSlice","name","user","email","token","isLoggerIn","isGetCurrentUser","extraReducer","registration","action","isLoggedIn","login","logOut","getCurrentUser","isFetchingCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phoneBook","auth","persistReducer","devTools","process","persistor","persistStore","PrivateRoute","children","routeProps","useSelector","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","Container","className","s","container","HomePage","lazy","Registration","Login","Phonebook","NotFoundPage","App","dispatch","useDispatch","useEffect","AppBar","fallback","exact","path","component","redirectTo","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","createAsyncThunk","a","rejectWithValue","get","data","contact","post","contactId","delete","headers","common","Authorization","credentials","thunkAPI","getState","persistedToken","getUserName","module","exports","Navigation","link","activeClassName","activeLink","UserMenu","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","createAction"],"mappings":"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","file":"static/js/main.6e7c9211.chunk.js","sourcesContent":["import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n// import { createSlice } from '@reduxjs/toolkit';\r\nimport { changeFilter } from '../Phonebook/phonebook-actions';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './phonebook-operations';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n  loading: false,\r\n};\r\n\r\nconst contactItems = createReducer(initialState.contacts, {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\nconst filterReducer = createReducer(initialState.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nconst contactsReducer = combineReducers({\r\n  contactItems,\r\n  filterReducer,\r\n  loading,\r\n});\r\nexport default contactsReducer;\r\n// const contactsSlice = createSlice({\r\n//   name: 'contacts',\r\n//   initialState: { contactItems: [], loading: false, error: null },\r\n//   extraReducers: {\r\n//     [fetchContacts.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: action.payload,\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [fetchContacts.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [fetchContacts.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n\r\n//     [addContact.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: [...state.contactItems, action.payload],\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [addContact.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [addContact.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n\r\n//     [deleteContact.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: state.contactItems.filter(\r\n//         ({ id }) => id !== action.payload,\r\n//       ),\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [deleteContact.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [deleteContact.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n//   },\r\n// });\r\n\r\n// export default contactsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { registration, logOut, login, getCurrentUser } from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggerIn: false,\r\n  isGetCurrentUser: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducer: {\r\n    [registration.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [login.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [getCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [getCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [getCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import { filterReducer } from './Phonebook/filter-reducer';\r\nimport contactsReducer from './Phonebook/phonebook-reduser';\r\nimport authSlice from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authSlice),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nexport const persistor = persistStore(store);\r\n// export default store;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport AppBar from '../AppBar/AppBar';\nimport { getIsFetchingCurrent } from '../../redux/auth/auth-selectors';\nimport PrivateRoute from '../PrivatRoute/PrivatRoute';\nimport PublicRoute from '../PublicRoute/PublicRoute';\nimport Container from '../../components/Container';\n\nimport { getCurrentUser } from '../../redux/auth/auth-operations';\n\n// import s from './App.module.css';\n\nconst HomePage = lazy(() =>\n  import(\n    '../../pages/HomePage/HomePage.js' /* webpackChunkName: \"home-page\" */\n  ),\n);\nconst Registration = lazy(() =>\n  import(\n    '../../pages/Registration/Registration.js' /* webpackChunkName: \"register-page\" */\n  ),\n);\nconst Login = lazy(() =>\n  import('../../pages/Login/Login.js' /* webpackChunkName: \"login-page\" */),\n);\nconst Phonebook = lazy(() =>\n  import(\n    '../../pages/Phonebook/Phonebook.js' /* webpackChunkName: \"phonebook-page\" */\n  ),\n);\nconst NotFoundPage = lazy(() =>\n  import(\n    '../../pages/NoFoundPage/NoFoundPage.js' /* webpackChunkName: \"not-found-page\" */\n  ),\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  // const isFetchingCurrentUser = useSelector(getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n  return (\n    <>\n      <AppBar />\n      <Container>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={Registration}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              restricted\n              redirectTo=\"/login\"\n              component={Phonebook}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistor, store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://618fa5fff6bf450017484991.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const registration = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logOut',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n\r\n      token.unset();\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI, { rejectWithValue }) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('users/current');\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","// import {reselect} from '@reduxjs/toolkit'\r\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1yyt0\",\"activeLink\":\"Navigation_activeLink__1-Fol Navigation_link__1yyt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__11vIr\",\"activeLink\":\"AuthNav_activeLink__210L4 AuthNav_link__11vIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3DBxj\",\"avatar\":\"UserMenu_avatar__3vozZ\",\"name\":\"UserMenu_name__3YKm3\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      exact\r\n      to=\"/\"\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n      // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n      // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n    >\r\n      PhoneBook\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default.ef849286.jpg\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport defaultAvatar from '../../images/default.jpg';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n      <span className={s.name}>Добро пожаловать, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n        // className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = createAction('contact/add');\r\n// export const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3ozKX\"};"],"sourceRoot":""}