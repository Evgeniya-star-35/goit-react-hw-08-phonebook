{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","pages/Phonebook/Phonebook.module.css","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","pages/Phonebook/Phonebook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["module","exports","getContacts","state","phoneBook","contactItems","getFilter","filterReducer","getFiltredContacts","createSelector","filter","name","toLowerCase","includes","Form","useState","setName","phone","setPhone","contacts","useSelector","dispatch","useDispatch","history","useHistory","goToContacts","useRef","useEffect","current","push","handleInputChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","some","element","alert","addContact","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","changeFilter","currentTarget","Contact","number","propType","PropTypes","string","isRequired","ContactsList","fetchContacts","map","id","item","onClick","deleteContact","Phonebook","AppBar","contactTitle","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/phonebook-page.fe16c855.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2dhb5\",\"label\":\"Form_label__3Pn_r\",\"input\":\"Form_input__27sAO\",\"button\":\"Form_button__2wu6a\",\"btnText\":\"Form_btnText__daUuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__xYwmu\",\"value\":\"Filter_value__2JTx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name___Ntgo\",\"number\":\"Contact_number__1SdR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1zzhx\",\"button\":\"ContactsList_button__19Ahz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__14yrC\",\"contactTitle\":\"Phonebook_contactTitle__1aR6n\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phoneBook.contactItems;\r\nexport const getFilter = state => state.phoneBook.filterReducer;\r\n\r\nexport const getFiltredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactItems, filter) =>\r\n    contactItems.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const goToContacts = useRef(false);\n\n  useEffect(() => {\n    if (!goToContacts.current) {\n      goToContacts.current = true;\n      return;\n    }\n    history.push('/contacts');\n  }, [history, contacts]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    // const contact = {\n    //   id: uuidv4(),\n    //   name,\n    //   number,\n    // };\n    dispatch(addContact({ name, phone }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={phone}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  // console.log(filter);\n\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, phone, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={phone} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import Form from '../../components/Form';\r\nimport Filter from '../../components/Filter';\r\nimport ContactList from '../../components/ContactsList';\r\nimport AppBar from '../../components/AppBar';\r\nimport s from './Phonebook.module.css';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <Form />\r\n      <Filter />\r\n      <h3 className={s.contactTitle}>Contacts</h3>\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}