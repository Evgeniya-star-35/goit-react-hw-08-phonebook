{"version":3,"sources":["components/Form/Form.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-operations.js","redux/Phonebook/phonebook-reduser.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/Navigation/Navigation.js","redux/auth/auth-selectors.js","images/default.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/App/App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","post","deleteContact","contactId","delete","id","initialState","contactItems","createReducer","fulfilled","payload","state","filter","loading","pending","rejected","filterReducer","contactsReducer","combineReducers","token","headers","common","Authorization","registration","credentials","login","logOut","getCurrentUser","thunkAPI","getState","persistedToken","auth","authSlice","createSlice","name","user","email","isLoggerIn","isGetCurrentUser","extraReducer","isFetchingCurrentUser","isLoggedIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phoneBook","persistReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","createSelector","toLowerCase","includes","Form","useState","setName","phone","setPhone","contacts","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","currentTarget","Contact","number","propType","PropTypes","string","isRequired","ContactsList","useEffect","map","item","onClick","Navigation","to","isActive","activeLink","link","getIsLoggedIn","getUserName","UserMenu","AuthNav","AppBar","header","App","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7276c33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2dhb5\",\"label\":\"Form_label__3Pn_r\",\"input\":\"Form_input__27sAO\",\"button\":\"Form_button__2wu6a\",\"btnText\":\"Form_btnText__daUuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1yyt0\",\"activeLink\":\"Navigation_activeLink__1-Fol Navigation_link__1yyt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__11vIr\",\"activeLink\":\"AuthNav_activeLink__210L4 AuthNav_link__11vIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__xYwmu\",\"value\":\"Filter_value__2JTx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name___Ntgo\",\"number\":\"Contact_number__1SdR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1zzhx\",\"button\":\"ContactsList_button__19Ahz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__8M9vJ\",\"contactTitle\":\"App_contactTitle__3VV9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3ozKX\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = createAction('contact/add');\r\n// export const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://618fa5fff6bf450017484991.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n// import { createSlice } from '@reduxjs/toolkit';\r\nimport { changeFilter } from '../Phonebook/phonebook-actions';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './phonebook-operations';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n  loading: false,\r\n};\r\n\r\nconst contactItems = createReducer(initialState.contacts, {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\nconst filterReducer = createReducer(initialState.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nconst contactsReducer = combineReducers({\r\n  contactItems,\r\n  filterReducer,\r\n  loading,\r\n});\r\nexport default contactsReducer;\r\n// const contactsSlice = createSlice({\r\n//   name: 'contacts',\r\n//   initialState: { contactItems: [], loading: false, error: null },\r\n//   extraReducers: {\r\n//     [fetchContacts.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: action.payload,\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [fetchContacts.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [fetchContacts.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n\r\n//     [addContact.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: [...state.contactItems, action.payload],\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [addContact.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [addContact.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n\r\n//     [deleteContact.fulfilled]: (state, action) => ({\r\n//       ...state,\r\n//       contactItems: state.contactItems.filter(\r\n//         ({ id }) => id !== action.payload,\r\n//       ),\r\n//       loading: false,\r\n//       error: null,\r\n//     }),\r\n//     [deleteContact.pending]: state => ({\r\n//       ...state,\r\n//       loading: true,\r\n//       error: null,\r\n//     }),\r\n//     [deleteContact.rejected]: (state, action) => ({\r\n//       ...state,\r\n//       loading: false,\r\n//       error: action.payload,\r\n//     }),\r\n//   },\r\n// });\r\n\r\n// export default contactsSlice.reducer;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const registration = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logOut',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n\r\n      token.unset();\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI, { rejectWithValue }) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('users/current');\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { registration, logOut, login, getCurrentUser } from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggerIn: false,\r\n  isGetCurrentUser: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducer: {\r\n    [registration.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      user: payload.user,\r\n      token: payload.token,\r\n      isLoggerIn: true,\r\n    }),\r\n    [login.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      user: payload.user,\r\n      token: payload.token,\r\n      isLoggerIn: true,\r\n    }),\r\n    [logOut.fulfilled]: state => ({\r\n      ...state,\r\n      user: { name: null, email: null },\r\n      token: null,\r\n      isLoggerIn: false,\r\n    }),\r\n    [getCurrentUser.pending]: state => ({\r\n      ...state,\r\n      isFetchingCurrentUser: true,\r\n    }),\r\n    [getCurrentUser.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      user: payload,\r\n      isLoggedIn: true,\r\n      isLoggedIn: false,\r\n    }),\r\n\r\n    [getCurrentUser.rejected]: state => ({\r\n      ...state,\r\n      isFetchingCurrentUser: false,\r\n    }),\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import { filterReducer } from './Phonebook/filter-reducer';\r\nimport contactsReducer from './Phonebook/phonebook-reduser';\r\nimport authSlice from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authSlice),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nexport const persistor = persistStore(store);\r\n// export default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phoneBook.contactItems;\r\nexport const getFilter = state => state.phoneBook.filterReducer;\r\n\r\nexport const getFiltredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactItems, filter) =>\r\n    contactItems.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    // const contact = {\n    //   id: uuidv4(),\n    //   name,\n    //   number,\n    // };\n    dispatch(addContact({ name, phone }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={phone}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  // console.log(filter);\n\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, phone, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={phone} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n    >\r\n      PhoneBook\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","// import {reselect} from '@reduxjs/toolkit'\r\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\n","export default __webpack_public_path__ + \"static/media/default.ef849286.jpg\";","import { useDispatch, useSelector } from 'react-redux';\r\n// import { authSelectors, authOperations } from '../../redux/auth';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport defaultAvatar from '../../images/default.jpg';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  //   return (\r\n  //     <div style={styles.container}>\r\n  //       <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n  //       <span style={styles.name}>Добро пожаловать, {name}</span>\r\n  //       <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n  //         Выйти\r\n  //       </button>\r\n  //     </div>\r\n  //   );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","// import { Routes, Route, Link } from 'react-router-dom';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\nimport AppBar from '../AppBar';\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <AppBar />\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n    // <Routes>\n    //   <Route path= \"/\" element={}/>\n    //   </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistor, store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}